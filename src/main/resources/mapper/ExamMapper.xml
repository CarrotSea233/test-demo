<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ExamMapper">
    <insert id="insertExam">
        insert into examination(exam_name, creation_time, modification_time)
        values(#{examName}, #{creationTime}, #{modificationTime})
    </insert>

    <select id="getExamById" resultType="model.entity.Exam">
        select exam_id, exam_name, creation_time, modification_time
        from examination
        where exam_id=#{examId}
    </select>

    <select id="getExam" resultType="model.entity.Exam">
        select exam_id, exam_name, creation_time, modification_time
        from examination
        where exam_name=#{examName} and creation_time=#{creationTime}
    </select>

    <insert id="insertReExamQuestion">
        INSERT INTO relation_exam_question (exam_id, question_id, question_score, order_number)
        VALUES (#{examId}, #{questionId}, #{questionScore}, #{orderNumber})
    </insert>

    
    <select id="listQuestionsByExamId" resultType="model.view.ExamQuestionsView">
        select req_id, exam_id, question_id, question_name,question_types, question_score, order_number
        from exam_questions_view
        where exam_id=#{examId}
    </select>

    <select id="listReExamQuestionByExamId" resultType="model.entity.ReExamQuestion">
        select req_id, exam_id, question_id, question_score, order_number
        from relation_exam_question
        where exam_id=#{examId}
    </select>

    <select id="findExams" resultType="model.entity.Exam">
        SELECT * FROM examination
        <where>
            <if test="examId != null and examId != ''">
                AND exam_id = #{examId}
            </if>
            <if test="examName != null and examName != ''">
                AND exam_name LIKE CONCAT('%', #{examName}, '%')
            </if>
            <if test="creationTime != null and creationTime != ''">
                AND creation_time = #{creationTime}
            </if>
            <if test="modificationTime != null and modificationTime != ''">
                AND modification_time = #{modificationTime}
            </if>
        </where>
        order by exam_id desc
    </select>

    <delete id="deleteExamQuestions">
        delete from relation_exam_question where exam_id=#{examId}
    </delete>

    <delete id="deleteExam">
        delete from examination where exam_id=#{examId}
    </delete>

    <update id="updateExam">
        update examination set exam_name=#{examName} where exam_id=#{examId}
    </update>

    <update id="delteteReExamQuestion">
        delete from relation_exam_question where req_id=#{reqId}
    </update>

    <update id="updateTheQuestionScore">
        update relation_exam_question set question_score=#{questionScore} where exam_id=#{examId} and question_id=#{questionId}
    </update>

    <select id="listExams" resultType="model.entity.Exam">
        select exam_id, exam_name, creation_time, modification_time
        from examination
        order by exam_id desc
    </select>
    
    <select id="getReExamQuestionByExamAndQuestionId" resultType="model.entity.ReExamQuestion">
        select *
        from relation_exam_question
        where exam_id=#{examId} and question_id=#{questionId}
    </select>
</mapper>
